<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.serendipity.model.ReviewDAO">
	<insert id="reviewWrite">
		insert into review(review_num, user_num, review_title, review_content, review_content1, review_content2, review_content3, review_content4, review_content5, review_picture1, review_picture2, review_picture3, review_picture4, review_picture5, like_count, review_date, local_code, reply_count)
		values(review_seq.nextval, #{user_num}, #{review_title}, #{review_content}, #{review_content1}, #{review_content2}, #{review_content3}, #{review_content4}, #{review_content5}, #{review_picture1}, #{review_picture2}, #{review_picture3}, #{review_picture4}, #{review_picture5}, 0, SYSDATE,#{local_code},0)
	</insert>
	
	<select id="localList" resultType="kr.co.serendipity.model.LocalDTO">
		select local_code, local_name from local order by local_code asc
	</select>
	
	<select id="reviewList" resultType="hashmap">
		select r.review_num,r.user_num,m.id,r.review_title, r.review_date, r.review_content,r.review_picture1,r.like_count,l.local_name, r.reply_count from review r, local l, member m where r.user_num=m.user_num and l.local_code=r.local_code order by review_num desc
	</select>
	
	<select id="reviewDetail" resultType="hashmap">
		select r.review_num,r.user_num,m.id,r.review_title, r.review_date, r.review_content, r.review_content1, r.review_content2, r.review_content3, r.review_content4, r.review_content5,r.review_picture1, r.review_picture2, r.review_picture3, r.review_picture4, r.review_picture5, r.like_count,l.local_name from review r, local l, member m where r.local_code=l.local_code and r.user_num=m.user_num and review_num=#{review_num}
	</select>
	
	<select id="getReviewListCount" resultType="Integer">
		select count(*) from review
	</select>
	
	<delete id="reviewDelete">
		delete from review where review_num=#{review_num}
	</delete>
	
	<update id="reviewUpdate">
		update review set review_title=#{review_title}, review_content=#{review_content}, review_content1=#{review_content1}, review_content2=#{review_content2}, review_content3=#{review_content3}, review_content4=#{review_content4}, review_content5=#{review_content5}, review_picture1=#{review_picture1}, review_picture2=#{review_picture2}, review_picture3=#{review_picture3}, review_picture4=#{review_picture4}, review_picture5=#{review_picture5}, review_date=sysdate where review_num=#{review_num}
	</update>
	
	<select id="selectPicture" resultType="kr.co.serendipity.model.ReviewDTO">
		select review_picture1, review_picture2, review_picture3, review_picture4, review_picture5 from review where review_num=#{review_num}
	</select>
	
	<select id="filteringReviewList" resultType="hashmap">
		select r.review_num,r.user_num,m.id,r.review_title, r.review_date, r.review_content,r.review_picture1,r.like_count,l.local_name,r.reply_count from review r, local l, member m where r.user_num=m.user_num and l.local_code=r.local_code and r.local_code=#{local_code}
	</select>
	
	<select id="orderReviewList" resultType="hashmap">
		select r.review_num,r.user_num,m.id,r.review_title, r.review_date, r.review_content,r.review_picture1,r.like_count,l.local_name,r.reply_count from review r, local l, member m where r.user_num=m.user_num and l.local_code=r.local_code
		<if test="order.equalsIgnoreCase('review_num')">
			order by r.review_num desc
		</if>
		
		<if test="order.equalsIgnoreCase('like_count')">
		 	order by r.like_count desc
		</if>
		
		<if test="order.equalsIgnoreCase('reply_count')">
			order by reply_count desc
		</if>
	</select>
	
</mapper>