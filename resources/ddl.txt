/* member */
CREATE TABLE member (
	user_num NUMBER NOT NULL, /* 사용자번호 */
	country_code VARCHAR2(10) NOT NULL, /* 국가코드 */
	local_code VARCHAR2(10), /* 지역코드 */
	name VARCHAR2(50) NOT NULL, /* 이름 */
	id VARCHAR2(24) NOT NULL, /* ID */
	pw VARCHAR2(24) NOT NULL, /* PW */
	gender VARCHAR2(2) NOT NULL, /* 성별 */
	age NUMBER NOT NULL, /* 나이 */
	hp VARCHAR2(30) NOT NULL, /* HP */
	email VARCHAR2(50), /* 이메일 */
	profile_picture VARCHAR2(255), /* 프로필사진 */
	profile_description VARCHAR2(255) /* 프로필 소개 */
);

CREATE UNIQUE INDEX PK_member
	ON member (
		user_num ASC
	);

ALTER TABLE member
	ADD
		CONSTRAINT PK_member
		PRIMARY KEY (
			user_num
		);

/* 여행 게시판 */
CREATE TABLE board (
	board_num NUMBER NOT NULL, /* 글번호 */
	user_num NUMBER NOT NULL, /* 사용자번호(글쓴이) */
	board_title VARCHAR2(50) NOT NULL, /* 제목 */
	board_content VARCHAR2(4000), /* 여행 소개글 */
	board_picture1 VARCHAR2(255) NOT NULL, /* 사진1 */
	board_picture2 VARCHAR2(255), /* 사진2 */
	board_picture3 VARCHAR2(255), /* 사진3 */
	board_picture4 VARCHAR2(255), /* 사진4 */
	board_picture5 VARCHAR2(255), /* 사진5 */
	board_capacity NUMBER NOT NULL, /* 인원 */
	board_date DATE NOT NULL, /* 여행날짜 */
	board_latitude VARCHAR2(20) NOT NULL, /* 위도 */
	board_longitude VARCHAR2(20) NOT NULL, /* 경도 */
	local_code VARCHAR2(10) NOT NULL, /* 지역코드 */
	category_num NUMBER NOT NULL /* 카테고리번호 */
);

CREATE UNIQUE INDEX PK_board
	ON board (
		board_num ASC
	);

ALTER TABLE board
	ADD
		CONSTRAINT PK_board
		PRIMARY KEY (
			board_num
		);

/* 여행자 게시판 */
CREATE TABLE TABLE3 (
	COL <지정 되지 않음>, /* 제목 */
	COL2 <지정 되지 않음>, /* 여행 내용 */
	COL3 <지정 되지 않음>, /* 지불 비용 */
	COL4 <지정 되지 않음>, /* 만나는 장소 */
	COL5 <지정 되지 않음> /* 새 컬럼 */
);

/* 참가자 */
CREATE TABLE participant (
	parti_num NUMBER NOT NULL, /* 참가번호 */
	board_num NUMBER NOT NULL, /* 글번호 */
	user_num NUMBER NOT NULL, /* 사용자번호 */
	state VARCHAR2(10) NOT NULL /* 상태 */
);

CREATE UNIQUE INDEX PK_participant
	ON participant (
		parti_num ASC
	);

ALTER TABLE participant
	ADD
		CONSTRAINT PK_participant
		PRIMARY KEY (
			parti_num
		);

/* 신고 */
CREATE TABLE report (
	repoter NUMBER NOT NULL, /* 사용자번호(신고자) */
	villain NUMBER NOT NULL, /* 사용자번호(가해자) */
	report_title VARCHAR2(255) NOT NULL, /*  신고제목 */
	report_content VARCHAR2(4000) NOT NULL /* 신고내용 */
);

/* 여행 후기 */
CREATE TABLE review (
	review_num NUMBER NOT NULL, /* 글번호 */
	user_num NUMBER NOT NULL, /* 사용자번호(글쓴이) */
	review_title VARCHAR2(255), /* 제목 */
	review_content VARCHAR2(4000), /* 전체후기 */
	review_content1 VARCHAR2(4000) NOT NULL, /* 후기1 */
	review_content2 VARCHAR2(4000), /* 후기2 */
	review_content3 VARCHAR2(4000), /* 후기3 */
	review_content4 VARCHAR2(4000), /* 후기4 */
	review_content5 VARCHAR2(4000), /* 후기5 */
	review_picture1 VARCHAR2(255) NOT NULL, /* 사진1 */
	review_picture2 VARCHAR2(255), /* 사진2 */
	review_picture3 VARCHAR2(255), /* 사진3 */
	review_picture4 VARCHAR2(255), /* 사진4 */
	review_picture5 VARCHAR2(255), /* 사진5 */
	like_count NUMBER, /* 좋아요 */
	review_date DATE NOT NULL, /* 작성일시 */
	local_code VARCHAR2(10) /* 지역코드 */
);

CREATE UNIQUE INDEX PK_review
	ON review (
		review_num ASC
	);

ALTER TABLE review
	ADD
		CONSTRAINT PK_review
		PRIMARY KEY (
			review_num
		);

/* 쪽지 */
CREATE TABLE message (
	message_num NUMBER NOT NULL, /* 쪽지번호 */
	sender NUMBER NOT NULL, /* 사용자번호(보낸이) */
	receiver NUMBER NOT NULL, /* 사용자번호(받는이) */
	message_content LONG NOT NULL, /* 내용 */
	message_check VARCHAR2(10) /* 읽은 여부 */
);

CREATE UNIQUE INDEX PK_message
	ON message (
		message_num ASC
	);

ALTER TABLE message
	ADD
		CONSTRAINT PK_message
		PRIMARY KEY (
			message_num
		);

/* 여행 정보 */
CREATE TABLE travel_info (
	info_num NUMBER NOT NULL, /* 여행정보번호 */
	local_code VARCHAR2(10) NOT NULL, /* 지역코드 */
	bus_fee VARCHAR2(255) NOT NULL, /* 버스요금 */
	taxi_fee VARCHAR2(255) NOT NULL, /* 택시요금 */
	famous_food VARCHAR2(255) NOT NULL, /* 유명한먹거리 */
	attraction VARCHAR2(255) NOT NULL, /* 유명장소 */
	airport VARCHAR2(255) NOT NULL, /* 가까운공항 */
	info_latitude VARCHAR2(20) NOT NULL, /* 위도 */
	info_longitude VARCHAR2(255) NOT NULL /* 경도 */
);

CREATE UNIQUE INDEX PK_travel_info
	ON travel_info (
		info_num ASC
	);

ALTER TABLE travel_info
	ADD
		CONSTRAINT PK_travel_info
		PRIMARY KEY (
			info_num
		);

/* 여행내역 */
CREATE TABLE TABLE9 (
	user_num2 NUMBER, /* 사용자번호 */
	review_num NUMBER /* 글번호 */
);

/* 대기자 */
CREATE TABLE TABLE10 (
	board_num NUMBER, /* 글번호 */
	user_num NUMBER /* 사용자번호 */
);

/* 후기 댓글 */
CREATE TABLE reply (
	reply_num NUMBER NOT NULL, /* 댓글번호 */
	user_num NUMBER NOT NULL, /* 사용자번호(댓글단사람) */
	review_num NUMBER NOT NULL, /* 글번호 */
	reply_content VARCHAR2(4000) NOT NULL, /* 내용 */
	reply_date DATE NOT NULL /* 작성일시 */
);

CREATE UNIQUE INDEX PK_reply
	ON reply (
		reply_num ASC
	);

ALTER TABLE reply
	ADD
		CONSTRAINT PK_reply
		PRIMARY KEY (
			reply_num
		);

/* 가이드 평가 */
CREATE TABLE evaluation (
	eval_num NUMBER NOT NULL, /* 평점번호 */
	eval_user NUMBER NOT NULL, /* 사용자번호(점수 준 사람) */
	guide NUMBER NOT NULL, /* 사용자번호(가이드 한 사람) */
	eval_point NUMBER NOT NULL, /* 점수 */
	eval_date DATE NOT NULL /* 평가일시 */
);

CREATE UNIQUE INDEX PK_evaluation
	ON evaluation (
		eval_num ASC
	);

ALTER TABLE evaluation
	ADD
		CONSTRAINT PK_evaluation
		PRIMARY KEY (
			eval_num
		);

/* 새 테이블 */
CREATE TABLE TABLE13 (
);

/* 국가 */
CREATE TABLE TABLE14 (
);

/* 국가 */
CREATE TABLE country (
	country_code VARCHAR2(10) NOT NULL, /* 국가코드 */
	country_name VARCHAR2(20) NOT NULL /* 국가명 */
);

CREATE UNIQUE INDEX PK_country
	ON country (
		country_code ASC
	);

ALTER TABLE country
	ADD
		CONSTRAINT PK_country
		PRIMARY KEY (
			country_code
		);

/* 지역 */
CREATE TABLE local (
	local_code VARCHAR2(10) NOT NULL, /* 지역코드 */
	local_name VARCHAR2(20) NOT NULL /* 지역명 */
);

CREATE UNIQUE INDEX PK_local
	ON local (
		local_code ASC
	);

ALTER TABLE local
	ADD
		CONSTRAINT PK_local
		PRIMARY KEY (
			local_code
		);

/* 언어 종류 */
CREATE TABLE language (
	language_code VARCHAR2(10) NOT NULL, /* 언어 코드 */
	language_name VARCHAR2(50) NOT NULL /* 언어 이름 */
);

CREATE UNIQUE INDEX PK_language
	ON language (
		language_code ASC
	);

ALTER TABLE language
	ADD
		CONSTRAINT PK_language
		PRIMARY KEY (
			language_code
		);

/* 고른 언어 */
CREATE TABLE lang_select (
	user_num NUMBER NOT NULL, /* 사용자번호 */
	language_code VARCHAR2(10) NOT NULL /* 언어 코드 */
);

/* 고른 테마 */
CREATE TABLE theme_select (
	user_num NUMBER NOT NULL, /* 사용자번호 */
	theme_code VARCHAR2(20) NOT NULL /* 테마 코드 */
);

/* 테마 종류 */
CREATE TABLE theme (
	theme_code VARCHAR2(20) NOT NULL, /* 테마 코드 */
	theme_name VARCHAR2(20) NOT NULL /* 테마 이름 */
);

CREATE UNIQUE INDEX PK_theme
	ON theme (
		theme_code ASC
	);

ALTER TABLE theme
	ADD
		CONSTRAINT PK_theme
		PRIMARY KEY (
			theme_code
		);

/* 고른 관심사 */
CREATE TABLE hobby_select (
	user_num NUMBER NOT NULL, /* 사용자번호 */
	hobby_code VARCHAR2(10) /* 관심사 코드 */
);

/* 관심사 목록 */
CREATE TABLE hobby (
	hobby_code VARCHAR2(10) NOT NULL, /* 관심사 코드 */
	hobby_name VARCHAR2(20) NOT NULL /* 관심사 이름 */
);

CREATE UNIQUE INDEX PK_hobby
	ON hobby (
		hobby_code ASC
	);

ALTER TABLE hobby
	ADD
		CONSTRAINT PK_hobby
		PRIMARY KEY (
			hobby_code
		);

/* 여행경로 */
CREATE TABLE route (
	board_num NUMBER NOT NULL, /* 글번호 */
	route_latitude VARCHAR2(255) NOT NULL, /* 위도 */
	route_longitude VARCHAR2(255) NOT NULL /* 경도 */
);

/* 좋아요 */
CREATE TABLE review_like (
	like_num NUMBER NOT NULL, /* 좋아요번호 */
	review_num NUMBER NOT NULL, /* 글번호 */
	user_num NUMBER NOT NULL /* 사용자번호 */
);

CREATE UNIQUE INDEX PK_review_like
	ON review_like (
		like_num ASC
	);

ALTER TABLE review_like
	ADD
		CONSTRAINT PK_review_like
		PRIMARY KEY (
			like_num
		);

/* 알림 */
CREATE TABLE alarm (
	notice_code NUMBER NOT NULL, /* 알림종류 */
	user_num NUMBER NOT NULL, /* 사용자번호 */
	notice_primary NUMBER NOT NULL /* 기본키값 */
);

/* 알림종류 */
CREATE TABLE alarm_kind (
	notice_code NUMBER NOT NULL, /* 알림종류 */
	notice_name VARCHAR2(50) NOT NULL /* 알림이름 */
);

CREATE UNIQUE INDEX PK_alarm_kind
	ON alarm_kind (
		notice_code ASC
	);

ALTER TABLE alarm_kind
	ADD
		CONSTRAINT PK_alarm_kind
		PRIMARY KEY (
			notice_code
		);

/* 여행게시판-여행자 */
CREATE TABLE travler_board (
	board_num NUMBER NOT NULL, /* 글번호 */
	user_num NUMBER NOT NULL, /* 사용자번호 */
	board_title VARCHAR2(50) NOT NULL, /* 제목 */
	board_content LONG, /* 여행소개글 */
	board_picture1 VARCHAR2(255) NOT NULL, /* 사진1 */
	board_picture2 VARCHAR2(255), /* 사진2 */
	board_picture3 VARCHAR2(255), /* 사진3 */
	board_picture4 VARCHAR2(255), /* 사진4 */
	board_picture5 VARCHAR2(255), /* 사진5 */
	participate_num NUMBER NOT NULL, /* 참가인원 */
	board_date DATE NOT NULL, /* 여행날짜 */
	board_latitude VARCHAR2(20) NOT NULL, /* 위도 */
	board_longititude VARCHAR2(20) NOT NULL, /* 경도 */
	local_code VARCHAR2(10) NOT NULL /* 지역코드 */
);

CREATE UNIQUE INDEX PK_travler_board
	ON travler_board (
		board_num ASC
	);

ALTER TABLE travler_board
	ADD
		CONSTRAINT PK_travler_board
		PRIMARY KEY (
			board_num
		);

/* 참가가이드 */
CREATE TABLE guide (
	req_num NUMBER NOT NULL, /* 보낸요청번호 */
	board_num NUMBER NOT NULL, /* 글번호 */
	user_num NUMBER NOT NULL, /* 사용자번호 */
	state VARCHAR2(10) NOT NULL /* 상태 */
);

CREATE UNIQUE INDEX PK_guide
	ON guide (
		req_num ASC
	);

ALTER TABLE guide
	ADD
		CONSTRAINT PK_guide
		PRIMARY KEY (
			req_num
		);

/* 게시판 카테고리 */
CREATE TABLE category (
	category_num NUMBER NOT NULL, /* 카테고리번호 */
	category_name VARCHAR2(50) NOT NULL /* 카테고리이름 */
);

CREATE UNIQUE INDEX PK_category
	ON category (
		category_num ASC
	);

ALTER TABLE category
	ADD
		CONSTRAINT PK_category
		PRIMARY KEY (
			category_num
		);

ALTER TABLE member
	ADD
		CONSTRAINT FK_country_TO_member
		FOREIGN KEY (
			country_code
		)
		REFERENCES country (
			country_code
		)
		ON DELETE CASCADE;

ALTER TABLE member
	ADD
		CONSTRAINT FK_local_TO_member
		FOREIGN KEY (
			local_code
		)
		REFERENCES local (
			local_code
		)
		ON DELETE CASCADE;

ALTER TABLE board
	ADD
		CONSTRAINT FK_member_TO_board
		FOREIGN KEY (
			user_num
		)
		REFERENCES member (
			user_num
		)
		ON DELETE CASCADE;

ALTER TABLE board
	ADD
		CONSTRAINT FK_local_TO_board
		FOREIGN KEY (
			local_code
		)
		REFERENCES local (
			local_code
		)
		ON DELETE CASCADE;

ALTER TABLE board
	ADD
		CONSTRAINT FK_category_TO_board
		FOREIGN KEY (
			category_num
		)
		REFERENCES category (
			category_num
		)
		ON DELETE CASCADE;

ALTER TABLE participant
	ADD
		CONSTRAINT FK_board_TO_participant
		FOREIGN KEY (
			board_num
		)
		REFERENCES board (
			board_num
		)
		ON DELETE CASCADE;

ALTER TABLE participant
	ADD
		CONSTRAINT FK_member_TO_participant
		FOREIGN KEY (
			user_num
		)
		REFERENCES member (
			user_num
		)
		ON DELETE CASCADE;

ALTER TABLE report
	ADD
		CONSTRAINT FK_member_TO_report2
		FOREIGN KEY (
			repoter
		)
		REFERENCES member (
			user_num
		)
		ON DELETE CASCADE;

ALTER TABLE report
	ADD
		CONSTRAINT FK_member_TO_report
		FOREIGN KEY (
			villain
		)
		REFERENCES member (
			user_num
		)
		ON DELETE CASCADE;

ALTER TABLE review
	ADD
		CONSTRAINT FK_member_TO_review
		FOREIGN KEY (
			user_num
		)
		REFERENCES member (
			user_num
		)
		ON DELETE CASCADE;

ALTER TABLE review
	ADD
		CONSTRAINT FK_local_TO_review
		FOREIGN KEY (
			local_code
		)
		REFERENCES local (
			local_code
		)
		ON DELETE CASCADE;

ALTER TABLE message
	ADD
		CONSTRAINT FK_member_TO_message2
		FOREIGN KEY (
			sender
		)
		REFERENCES member (
			user_num
		)
		ON DELETE CASCADE;

ALTER TABLE message
	ADD
		CONSTRAINT FK_member_TO_message
		FOREIGN KEY (
			receiver
		)
		REFERENCES member (
			user_num
		)
		ON DELETE CASCADE;

ALTER TABLE travel_info
	ADD
		CONSTRAINT FK_local_TO_travel_info
		FOREIGN KEY (
			local_code
		)
		REFERENCES local (
			local_code
		)
		ON DELETE CASCADE;

ALTER TABLE TABLE9
	ADD
		CONSTRAINT FK_member_TO_TABLE9
		FOREIGN KEY (
			user_num2
		)
		REFERENCES member (
			user_num
		);

ALTER TABLE TABLE9
	ADD
		CONSTRAINT FK_review_TO_TABLE9
		FOREIGN KEY (
			review_num
		)
		REFERENCES review (
			review_num
		);

ALTER TABLE TABLE10
	ADD
		CONSTRAINT FK_board_TO_TABLE10
		FOREIGN KEY (
			board_num
		)
		REFERENCES board (
			board_num
		);

ALTER TABLE TABLE10
	ADD
		CONSTRAINT FK_member_TO_TABLE10
		FOREIGN KEY (
			user_num
		)
		REFERENCES member (
			user_num
		);

ALTER TABLE reply
	ADD
		CONSTRAINT FK_review_TO_reply
		FOREIGN KEY (
			review_num
		)
		REFERENCES review (
			review_num
		)
		ON DELETE CASCADE;

ALTER TABLE reply
	ADD
		CONSTRAINT FK_member_TO_reply
		FOREIGN KEY (
			user_num
		)
		REFERENCES member (
			user_num
		)
		ON DELETE CASCADE;

ALTER TABLE evaluation
	ADD
		CONSTRAINT FK_member_TO_evaluation
		FOREIGN KEY (
			guide
		)
		REFERENCES member (
			user_num
		)
		ON DELETE CASCADE;

ALTER TABLE evaluation
	ADD
		CONSTRAINT FK_member_TO_evaluation2
		FOREIGN KEY (
			eval_user
		)
		REFERENCES member (
			user_num
		)
		ON DELETE CASCADE;

ALTER TABLE lang_select
	ADD
		CONSTRAINT FK_language_TO_lang_select
		FOREIGN KEY (
			language_code
		)
		REFERENCES language (
			language_code
		)
		ON DELETE CASCADE;

ALTER TABLE lang_select
	ADD
		CONSTRAINT FK_member_TO_lang_select
		FOREIGN KEY (
			user_num
		)
		REFERENCES member (
			user_num
		)
		ON DELETE CASCADE;

ALTER TABLE theme_select
	ADD
		CONSTRAINT FK_member_TO_theme_select
		FOREIGN KEY (
			user_num
		)
		REFERENCES member (
			user_num
		)
		ON DELETE CASCADE;

ALTER TABLE theme_select
	ADD
		CONSTRAINT FK_theme_TO_theme_select
		FOREIGN KEY (
			theme_code
		)
		REFERENCES theme (
			theme_code
		)
		ON DELETE CASCADE;

ALTER TABLE hobby_select
	ADD
		CONSTRAINT FK_member_TO_hobby_select
		FOREIGN KEY (
			user_num
		)
		REFERENCES member (
			user_num
		)
		ON DELETE CASCADE;

ALTER TABLE hobby_select
	ADD
		CONSTRAINT FK_hobby_TO_hobby_select
		FOREIGN KEY (
			hobby_code
		)
		REFERENCES hobby (
			hobby_code
		)
		ON DELETE CASCADE;

ALTER TABLE route
	ADD
		CONSTRAINT FK_board_TO_route
		FOREIGN KEY (
			board_num
		)
		REFERENCES board (
			board_num
		);

ALTER TABLE review_like
	ADD
		CONSTRAINT FK_review_TO_review_like
		FOREIGN KEY (
			review_num
		)
		REFERENCES review (
			review_num
		)
		ON DELETE CASCADE;

ALTER TABLE review_like
	ADD
		CONSTRAINT FK_member_TO_review_like
		FOREIGN KEY (
			user_num
		)
		REFERENCES member (
			user_num
		)
		ON DELETE CASCADE;

ALTER TABLE alarm
	ADD
		CONSTRAINT FK_alarm_kind_TO_alarm
		FOREIGN KEY (
			notice_code
		)
		REFERENCES alarm_kind (
			notice_code
		)
		ON DELETE CASCADE;

ALTER TABLE alarm
	ADD
		CONSTRAINT FK_member_TO_alarm
		FOREIGN KEY (
			user_num
		)
		REFERENCES member (
			user_num
		)
		ON DELETE CASCADE;

ALTER TABLE travler_board
	ADD
		CONSTRAINT FK_member_TO_travler_board
		FOREIGN KEY (
			user_num
		)
		REFERENCES member (
			user_num
		);

ALTER TABLE travler_board
	ADD
		CONSTRAINT FK_local_TO_travler_board
		FOREIGN KEY (
			local_code
		)
		REFERENCES local (
			local_code
		);

ALTER TABLE guide
	ADD
		CONSTRAINT FK_travler_board_TO_guide
		FOREIGN KEY (
			board_num
		)
		REFERENCES travler_board (
			board_num
		);

ALTER TABLE guide
	ADD
		CONSTRAINT FK_member_TO_guide
		FOREIGN KEY (
			user_num
		)
		REFERENCES member (
			user_num
		);

create table rcv_message(
  message_num number primary key,
  sender number not null,
  receiver number not null,
  message_content varchar2(4000) not null,
  message_check varchar2(10)
);

alter table rcv_message add constraint rcv_message_receiver_fk foreign key(receiver) references member(user_num);

alter table message add (message_title varchar2(100) not null);

alter table rcv_message add (message_title varchar2(100) not null);

alter table message drop (message_check);

alter table rcv_message drop (message_check);

alter table message add(message_date date not null);

alter table rcv_message add(message_date date not null);