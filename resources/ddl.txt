/* 게시판 */
CREATE TABLE BOARD (
	BOARD_NUM NUMBER NOT NULL, /* 게시판번호 */
	USER_NUM NUMBER NOT NULL, /* 사용자번호 */
	BOARD_TITLE VARCHAR2(255) NOT NULL, /* 게시판제목 */
	BOARD_CONTENT VARCHAR2(4000), /* 게시판내용 */
	BOARD_PICTURE1 VARCHAR2(255) NOT NULL, /* 게시판사진1 */
	BOARD_PICTURE2 VARCHAR2(255), /* 게시판사진2 */
	BOARD_PICTURE3 VARCHAR2(255), /* 게시판사진3 */
	BOARD_PICTURE4 VARCHAR2(255), /* 게시판사진4 */
	BOARD_PICTURE5 VARCHAR2(255), /* 게시판사진5 */
	BOARD_CAPACITY NUMBER NOT NULL, /* 게시판수용인원 */
	BOARD_DATE VARCHAR2(50) NOT NULL, /* 게시판날짜 */
	BOARD_LATITUDE VARCHAR2(100) NOT NULL, /* 위도 */
	BOARD_LONGITUDE VARCHAR2(100) NOT NULL, /* 경도 */
	LOCAL_CODE VARCHAR2(10) NOT NULL, /* 지역코드 */
	CATEGORY_NUM NUMBER NOT NULL, /* 카테고리번호 */
	PRICE VARCHAR2(255), /* 가격 */
	MEETING_ADDRESS VARCHAR2(100) /* 만나는장소주소 */
);

CREATE UNIQUE INDEX PK_BOARD
	ON BOARD (
		BOARD_NUM ASC
	);

ALTER TABLE BOARD
	ADD
		CONSTRAINT PK_BOARD
		PRIMARY KEY (
			BOARD_NUM
		);

/* 카테고리 */
CREATE TABLE CATEGORY (
	CATEGORY_NUM NUMBER NOT NULL, /* 카테고리번호 */
	CATEGORY_NAME VARCHAR2(50) NOT NULL /* 카테고리명 */
);

CREATE UNIQUE INDEX PK_CATEGORY
	ON CATEGORY (
		CATEGORY_NUM ASC
	);

ALTER TABLE CATEGORY
	ADD
		CONSTRAINT PK_CATEGORY
		PRIMARY KEY (
			CATEGORY_NUM
		);

/* 국가 */
CREATE TABLE COUNTRY (
	COUNTRY_CODE VARCHAR2(10) NOT NULL, /* 국가코드 */
	COUNTRY_NAME VARCHAR2(30) NOT NULL /* 국가이름 */
);

CREATE UNIQUE INDEX PK_COUNTRY
	ON COUNTRY (
		COUNTRY_CODE ASC
	);

ALTER TABLE COUNTRY
	ADD
		CONSTRAINT PK_COUNTRY
		PRIMARY KEY (
			COUNTRY_CODE
		);


/* 취미 */
CREATE TABLE HOBBY (
	HOBBY_CODE VARCHAR2(10) NOT NULL, /* 취미코드 */
	HOBBY_NAME VARCHAR2(50) NOT NULL /* 취미이름 */
);

CREATE UNIQUE INDEX PK_HOBBY
	ON HOBBY (
		HOBBY_CODE ASC
	);

ALTER TABLE HOBBY
	ADD
		CONSTRAINT PK_HOBBY
		PRIMARY KEY (
			HOBBY_CODE
		);

/* 취미선택 */
CREATE TABLE HOBBY_SELECT (
	USER_NUM NUMBER NOT NULL, /* 사용자번호 */
	HOBBY_CODE VARCHAR2(10) /* 취미코드 */
);

/* 언어 */
CREATE TABLE LANGUAGE (
	LANGUAGE_CODE VARCHAR2(10) NOT NULL, /* 언어코드 */
	LANGUAGE_NAME VARCHAR2(50) NOT NULL /* 언어이름 */
);

CREATE UNIQUE INDEX PK_LANGUAGE
	ON LANGUAGE (
		LANGUAGE_CODE ASC
	);

ALTER TABLE LANGUAGE
	ADD
		CONSTRAINT PK_LANGUAGE
		PRIMARY KEY (
			LANGUAGE_CODE
		);

/* 언어선택 */
CREATE TABLE LANG_SELECT (
	USER_NUM NUMBER NOT NULL, /* 사용자번호 */
	LANGUAGE_CODE VARCHAR2(10) NOT NULL /* 언어코드 */
);

/* 지역 */
CREATE TABLE LOCAL (
	LOCAL_CODE VARCHAR2(10) NOT NULL, /* 지역코드 */
	LOCAL_NAME VARCHAR2(20) NOT NULL, /* 지역이름 */
	LOCAL_LATITUDE VARCHAR2(50), /* 위도 */
	LOCAL_LONGITUDE VARCHAR2(50), /* 경도 */
	LOCAL_IMG1 VARCHAR2(255), /* 지역이미지1 */
	LOCAL_IMG2 VARCHAR2(255), /* 지역이미지2 */
	LOCAL_IMG3 VARCHAR2(255), /* 지역이미지3 */
	LOCAL_IMG4 VARCHAR2(255) /* 지역이미지4 */
);

CREATE UNIQUE INDEX PK_LOCAL
	ON LOCAL (
		LOCAL_CODE ASC
	);

ALTER TABLE LOCAL
	ADD
		CONSTRAINT PK_LOCAL
		PRIMARY KEY (
			LOCAL_CODE
		);

/* 사용자 */
CREATE TABLE MEMBER (
	USER_NUM NUMBER NOT NULL, /* 사용자번호 */
	COUNTRY_CODE VARCHAR2(10) NOT NULL, /* 국가코드 */
	LOCAL_CODE VARCHAR2(10), /* 지역코드 */
	NAME VARCHAR2(50) NOT NULL, /* 이름 */
	ID VARCHAR2(24) NOT NULL, /* 아이디 */
	PW VARCHAR2(24) NOT NULL, /* 비밀번호 */
	GENDER VARCHAR2(5) NOT NULL, /* 성별 */
	AGE NUMBER NOT NULL, /* 나이 */
	HP VARCHAR2(30) NOT NULL, /* 핸드폰번호 */
	EMAIL VARCHAR2(50), /* 이메일 */
	PROFILE_PICTURE VARCHAR2(255), /* 프로필사진 */
	PROFILE_DESCRIPTION VARCHAR2(255), /* 프로필소개글 */
	REPORT_COUNT NUMBER, /* 신고횟수 */
	JOIN_DATE DATE /* 가입날짜 */
);

CREATE UNIQUE INDEX PK_MEMBER
	ON MEMBER (
		USER_NUM ASC
	);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT PK_MEMBER
		PRIMARY KEY (
			USER_NUM
		);

/* 보낸메시지 */
CREATE TABLE MESSAGE (
	MESSAGE_NUM NUMBER NOT NULL, /* 메시지번호 */
	SENDER NUMBER NOT NULL, /* 보내는사람 */
	RECEIVER NUMBER NOT NULL, /* 받는사람 */
	MESSAGE_CONTENT VARCHAR2(4000) NOT NULL, /* 메시지내용 */
	MESSAGE_TITLE VARCHAR2(100) NOT NULL, /* 메시지제목 */
	MESSAGE_DATE DATE NOT NULL /* 메시지날짜 */
);

CREATE UNIQUE INDEX PK_MESSAGE
	ON MESSAGE (
		MESSAGE_NUM ASC
	);

ALTER TABLE MESSAGE
	ADD
		CONSTRAINT PK_MESSAGE
		PRIMARY KEY (
			MESSAGE_NUM
		);

/* 참가자 */
CREATE TABLE PARTICIPANT (
	PARTI_NUM NUMBER NOT NULL, /* 참가번호 */
	BOARD_NUM NUMBER NOT NULL, /* 게시판번호 */
	USER_NUM NUMBER NOT NULL, /* 사용자번호 */
	STATE VARCHAR2(10) NOT NULL, /* 상태 */
	PARTI_DATE VARCHAR2(30), /* 참가날짜 */
	PARTI_CAPACITY NUMBER(30) /* 참가수용인원 */
);

CREATE UNIQUE INDEX PK_PARTICIPANT
	ON PARTICIPANT (
		PARTI_NUM ASC
	);

ALTER TABLE PARTICIPANT
	ADD
		CONSTRAINT PK_PARTICIPANT
		PRIMARY KEY (
			PARTI_NUM
		);

/* 받은메시지 */
CREATE TABLE RCV_MESSAGE (
	MESSAGE_NUM NUMBER NOT NULL, /* 메시지번호 */
	SENDER NUMBER NOT NULL, /* 보내는사람 */
	RECEIVER NUMBER NOT NULL, /* 받는사람 */
	MESSAGE_CONTENT VARCHAR2(4000) NOT NULL, /* 메시지내용 */
	MESSAGE_TITLE VARCHAR2(100) NOT NULL, /* 메시지제목 */
	MESSAGE_DATE DATE NOT NULL, /* 메시지날짜 */
	MSG_ALARM NUMBER /* 메시지알림 */
);

ALTER TABLE RCV_MESSAGE
	ADD
		CONSTRAINT SYS_C008250
		PRIMARY KEY (
			MESSAGE_NUM
		);

/* 댓글 */
CREATE TABLE REPLY (
	REPLY_NUM NUMBER NOT NULL, /* 댓글번호 */
	USER_NUM NUMBER NOT NULL, /* 사용자번호 */
	REVIEW_NUM NUMBER NOT NULL, /* 여행후기번호 */
	REPLY_CONTENT VARCHAR2(4000) NOT NULL, /* 댓글내용 */
	REPLY_DATE DATE NOT NULL, /* 댓글날짜 */
	REPLY_ALARM NUMBER /* 댓글알림 */
);

CREATE UNIQUE INDEX PK_REPLY
	ON REPLY (
		REPLY_NUM ASC
	);

ALTER TABLE REPLY
	ADD
		CONSTRAINT PK_REPLY
		PRIMARY KEY (
			REPLY_NUM
		);

/* 신고 */
CREATE TABLE REPORT (
	REPORTER NUMBER NOT NULL, /* 신고자 */
	VILLAIN NUMBER NOT NULL, /* 가해자 */
	REPORT_TITLE VARCHAR2(255) NOT NULL, /* 신고제목 */
	REPORT_CONTENT VARCHAR2(4000) NOT NULL, /* 신고내용 */
	REPORT_NUM NUMBER NOT NULL, /* 신고번호 */
	REPORT_DATE DATE /* 신고날짜 */
);

ALTER TABLE REPORT
	ADD
		CONSTRAINT SYS_C008262
		PRIMARY KEY (
			REPORT_NUM
		);

/* 여행후기 */
CREATE TABLE REVIEW (
	REVIEW_NUM NUMBER NOT NULL, /* 여행후기번호 */
	USER_NUM NUMBER NOT NULL, /* 사용자번호 */
	REVIEW_TITLE VARCHAR2(255), /* 여행후기제목 */
	REVIEW_CONTENT VARCHAR2(4000), /* 여행후기전체내용 */
	REVIEW_CONTENT1 VARCHAR2(4000) NOT NULL, /* 여행후기사진내용1 */
	REVIEW_CONTENT2 VARCHAR2(4000), /* 여행후기사진내용2 */
	REVIEW_CONTENT3 VARCHAR2(4000), /* 여행후기사진내용3 */
	REVIEW_CONTENT4 VARCHAR2(4000), /* 여행후기사진내용4 */
	REVIEW_CONTENT5 VARCHAR2(4000), /* 여행후기사진내용5 */
	REVIEW_PICTURE1 VARCHAR2(255) NOT NULL, /* 여행후기사진1 */
	REVIEW_PICTURE2 VARCHAR2(255), /* 여행후기사진2 */
	REVIEW_PICTURE3 VARCHAR2(255), /* 여행후기사진3 */
	REVIEW_PICTURE4 VARCHAR2(255), /* 여행후기사진4 */
	REVIEW_PICTURE5 VARCHAR2(255), /* 여행후기사진5 */
	LIKE_COUNT NUMBER, /* 좋아요수 */
	REVIEW_DATE DATE NOT NULL, /* 여행후기날짜 */
	LOCAL_CODE VARCHAR2(10), /* 지역코드 */
	REPLY_COUNT NUMBER /* 댓글수 */
);

CREATE UNIQUE INDEX PK_REVIEW
	ON REVIEW (
		REVIEW_NUM ASC
	);

ALTER TABLE REVIEW
	ADD
		CONSTRAINT PK_REVIEW
		PRIMARY KEY (
			REVIEW_NUM
		);

/* 좋아요 */
CREATE TABLE REVIEW_LIKE (
	LIKE_NUM NUMBER NOT NULL, /* 좋아요번호 */
	REVIEW_NUM NUMBER NOT NULL, /* 여행후기번호 */
	USER_NUM NUMBER NOT NULL, /* 사용자번호 */
	LIKE_ALARM NUMBER /* 좋아요알림 */
);

CREATE UNIQUE INDEX PK_REVIEW_LIKE
	ON REVIEW_LIKE (
		LIKE_NUM ASC
	);

ALTER TABLE REVIEW_LIKE
	ADD
		CONSTRAINT PK_REVIEW_LIKE
		PRIMARY KEY (
			LIKE_NUM
		);

/* 여행정보 */
CREATE TABLE TRAVEL_INFO (
	INFO_NUM NUMBER NOT NULL, /* 여행정보번호 */
	LOCAL_CODE VARCHAR2(10) NOT NULL, /* 지역번호 */
	BUS_FEE VARCHAR2(255) NOT NULL, /* 버스비 */
	TAXI_FEE VARCHAR2(255) NOT NULL, /* 택시비 */
	FAMOUS_FOOD VARCHAR2(255) NOT NULL, /* 유명한음식 */
	ATTRACTION VARCHAR2(255) NOT NULL, /* 관광지 */
	AIRPORT VARCHAR2(255) NOT NULL /* 가까운공항 */
);

CREATE UNIQUE INDEX PK_TRAVEL_INFO
	ON TRAVEL_INFO (
		INFO_NUM ASC
	);

ALTER TABLE TRAVEL_INFO
	ADD
		CONSTRAINT PK_TRAVEL_INFO
		PRIMARY KEY (
			INFO_NUM
		);

/* 방문자 */
CREATE TABLE VISIT (
	VISIT_DATE DATE /* 방문날짜 */
);

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_MEMBER_TO_BOARD
		FOREIGN KEY (
			USER_NUM
		)
		REFERENCES MEMBER (
			USER_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_LOCAL_TO_BOARD
		FOREIGN KEY (
			LOCAL_CODE
		)
		REFERENCES LOCAL (
			LOCAL_CODE
		)
		ON DELETE CASCADE;

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_CATEGORY_TO_BOARD
		FOREIGN KEY (
			CATEGORY_NUM
		)
		REFERENCES CATEGORY (
			CATEGORY_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE HOBBY_SELECT
	ADD
		CONSTRAINT FK_MEMBER_TO_HOBBY_SELECT
		FOREIGN KEY (
			USER_NUM
		)
		REFERENCES MEMBER (
			USER_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE HOBBY_SELECT
	ADD
		CONSTRAINT FK_HOBBY_TO_HOBBY_SELECT
		FOREIGN KEY (
			HOBBY_CODE
		)
		REFERENCES HOBBY (
			HOBBY_CODE
		)
		ON DELETE CASCADE;

ALTER TABLE LANG_SELECT
	ADD
		CONSTRAINT FK_LANGUAGE_TO_LANG_SELECT
		FOREIGN KEY (
			LANGUAGE_CODE
		)
		REFERENCES LANGUAGE (
			LANGUAGE_CODE
		)
		ON DELETE CASCADE;

ALTER TABLE LANG_SELECT
	ADD
		CONSTRAINT FK_MEMBER_TO_LANG_SELECT
		FOREIGN KEY (
			USER_NUM
		)
		REFERENCES MEMBER (
			USER_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE MEMBER
	ADD
		CONSTRAINT FK_COUNTRY_TO_MEMBER
		FOREIGN KEY (
			COUNTRY_CODE
		)
		REFERENCES COUNTRY (
			COUNTRY_CODE
		)
		ON DELETE CASCADE;

ALTER TABLE MEMBER
	ADD
		CONSTRAINT FK_LOCAL_TO_MEMBER
		FOREIGN KEY (
			LOCAL_CODE
		)
		REFERENCES LOCAL (
			LOCAL_CODE
		)
		ON DELETE CASCADE;

ALTER TABLE MESSAGE
	ADD
		CONSTRAINT FK_MEMBER_TO_MESSAGE2
		FOREIGN KEY (
			SENDER
		)
		REFERENCES MEMBER (
			USER_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE MESSAGE
	ADD
		CONSTRAINT FK_MEMBER_TO_MESSAGE
		FOREIGN KEY (
			RECEIVER
		)
		REFERENCES MEMBER (
			USER_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE PARTICIPANT
	ADD
		CONSTRAINT FK_BOARD_TO_PARTICIPANT
		FOREIGN KEY (
			BOARD_NUM
		)
		REFERENCES BOARD (
			BOARD_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE PARTICIPANT
	ADD
		CONSTRAINT FK_MEMBER_TO_PARTICIPANT
		FOREIGN KEY (
			USER_NUM
		)
		REFERENCES MEMBER (
			USER_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE RCV_MESSAGE
	ADD
		CONSTRAINT RCV_MESSAGE_FK
		FOREIGN KEY (
			SENDER
		)
		REFERENCES MEMBER (
			USER_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE RCV_MESSAGE
	ADD
		CONSTRAINT RCV_MESSAGE_RECEIVER_FK
		FOREIGN KEY (
			RECEIVER
		)
		REFERENCES MEMBER (
			USER_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE REPLY
	ADD
		CONSTRAINT FK_REVIEW_TO_REPLY
		FOREIGN KEY (
			REVIEW_NUM
		)
		REFERENCES REVIEW (
			REVIEW_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE REPLY
	ADD
		CONSTRAINT FK_MEMBER_TO_REPLY
		FOREIGN KEY (
			USER_NUM
		)
		REFERENCES MEMBER (
			USER_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE REPORT
	ADD
		CONSTRAINT FK_MEMBER_TO_REPORT2
		FOREIGN KEY (
			REPORTER
		)
		REFERENCES MEMBER (
			USER_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE REPORT
	ADD
		CONSTRAINT FK_MEMBER_TO_REPORT
		FOREIGN KEY (
			VILLAIN
		)
		REFERENCES MEMBER (
			USER_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE REVIEW
	ADD
		CONSTRAINT FK_MEMBER_TO_REVIEW
		FOREIGN KEY (
			USER_NUM
		)
		REFERENCES MEMBER (
			USER_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE REVIEW
	ADD
		CONSTRAINT FK_LOCAL_TO_REVIEW
		FOREIGN KEY (
			LOCAL_CODE
		)
		REFERENCES LOCAL (
			LOCAL_CODE
		)
		ON DELETE CASCADE;

ALTER TABLE REVIEW_LIKE
	ADD
		CONSTRAINT FK_REVIEW_TO_REVIEW_LIKE
		FOREIGN KEY (
			REVIEW_NUM
		)
		REFERENCES REVIEW (
			REVIEW_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE REVIEW_LIKE
	ADD
		CONSTRAINT FK_MEMBER_TO_REVIEW_LIKE
		FOREIGN KEY (
			USER_NUM
		)
		REFERENCES MEMBER (
			USER_NUM
		)
		ON DELETE CASCADE;

ALTER TABLE TRAVEL_INFO
	ADD
		CONSTRAINT FK_LOCAL_TO_TRAVEL_INFO
		FOREIGN KEY (
			LOCAL_CODE
		)
		REFERENCES LOCAL (
			LOCAL_CODE
		)
		ON DELETE CASCADE;
